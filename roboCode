package org.usfirst.frc.team5323.robot;

import edu.wpi.first.wpilibj.IterativeRobot;


import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Joystick.ButtonType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Victor;
import java.lang.Math;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Robot extends IterativeRobot {
	/**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
	DriverStation dStation;
	RobotDrive rDrive;
	Joystick leftJoy;
	Joystick rightJoy;
	Talon talonLeft;
	Talon talonRight;
	Talon talonArm;
	Timer clock;
	Victor pully;
	private double speedLeftY;
	private double speedLeftX;
	private double speedRightY;
	private double speedRightX;
	
    public void robotInit() {
    	leftJoy = new Joystick(0);
    	rightJoy = new Joystick(1);
    	talonLeft = new Talon(2);
    	talonRight = new Talon(0);
    	talonArm = new Talon(4);
    	rDrive = new RobotDrive(talonLeft,talonRight);
    	clock = new Timer();
    	pully = new Victor(3);
    	leftJoy.getY();
    }

    /**
     * This function is called periodically during autonomous
     */
    public void autonomousPeriodic() {
    	clock.start();
    	if(clock.get()<=100){
    		talonLeft.set(0.1);
    		talonRight.set(-0.1);
    	}
    		
    	}
    

    /**
     * This function is called periodically during operator control
     */
    public void teleopPeriodic() {
    	speedLeftY = leftJoy.getY();
    	speedLeftX = leftJoy.getX();
    	speedRightY = rightJoy.getY();
    	speedRightX = rightJoy.getX();
    	/*if(speedY==0 && speedY==0){
    		talonLeft.set(.00);
    		talonRight.set(.00);
    	}
    	*/
    	if(speedLeftY>0){
    		talonLeft.set(-(Math.pow(speedLeftY, 2)));
    	}
    	if(speedLeftY<0){
    		talonLeft.set(Math.pow(speedLeftY, 2));
    	}
    	if(speedRightY>0){
    		talonRight.set(Math.pow(speedRightY, 2));
    	}
    	if(speedRightY<0){
    		talonRight.set(-(Math.pow(speedRightY, 2)));
    	}
    	
    	if(!leftJoy.getRawButton(4)&&!leftJoy.getRawButton(5)){
    		talonArm.set(0.0);
    	}
    	
    	else if(rightJoy.getTrigger()){
    		 talonArm.set(0.75);
    	}
    	else if(leftJoy.getTrigger()){
    		talonArm.set(-0.75);
    		
    	if(!leftJoy.getRawButton(3)&&!leftJoy.getRawButton(2)){
    		pully.set(0.0);
    	}
    	
    	else if(leftJoy.getRawButton(3)){
    		pully.set(0.75);
    	}
    	else if(leftJoy.getRawButton(2)){
    		pully.set(-0.75);
    		
    	}  
    	}
        }
  
    
    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
    	
    }
    
}
